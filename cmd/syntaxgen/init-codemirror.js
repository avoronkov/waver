// This file was generated by syntaxgen.

function initCodeMirror() {
    CodeMirror.defineSimpleMode('waver', {
        start: [
            { regex: /(?:{{ stringsJoin .Pragmas "|" }})\b/, token: 'comment' }, // keyword
            { regex: /(?:{{ stringsJoin .Waves "|" }})\b/, token: 'comment' }, // keyword
            { regex: /(?:{{ stringsJoin .StdFunctions "|" }})\b/, token: 'variable-2' },
            { regex: /(?:{{ stringsJoin .Functions "|" }})\b/, token: 'variable-2' },
            { regex: /(?:{{ stringsJoin .Modifiers "|" }})\b/, token: 'variable-3' },
            { regex: /(?:{{ stringsJoin .Identifiers "|" }})\b/, token: 'variable-3' },
            { regex: /".*"/, token: 'string' },
            { regex: /'.*'/, token: 'string' },
            { regex: /#.*/, sol: true, token: 'meta' },
            { regex: /\b(?:[\d]+(\.[\d]*)?)\b/, token: 'number' },
            { regex: /->/, token: 'comment' },
            { regex: /(% |%%)/, sol: true, token: 'comment' },
            // TODO generate atoms with syntaxgen
            { regex: /[+=\-:<>]/, token: 'atom' },
            // notes
            { regex: /\b[ABCDEFG][sb]?\d\b/, token: 'keyword' },
            // filters tokens (variable-3)
            { regex: /(?:{{ stringsJoin .Filters "|" }})\b/, token: 'variable-3' },
            { regex: /(?:{{ stringsJoin .FilterOptions "|" }})\b/, token: 'variable-3' },
        ],
    });

    const ta = document.getElementById('code-story')
    const codeMirror = CodeMirror.fromTextArea(ta, {
                    mode:  "waver",
                    lineNumbers: true,
    });
    codeMirror.setSize(null, 590);
    
    window.codeMirror = codeMirror;
    return codeMirror;
}

function getCodeMirrorCode() {
    const doc = window.codeMirror.getDoc();
    return doc.getValue();
}

function setCodeMirrorCode(text) {
    const doc = window.codeMirror.getDoc();
    doc.setValue(text);
}
